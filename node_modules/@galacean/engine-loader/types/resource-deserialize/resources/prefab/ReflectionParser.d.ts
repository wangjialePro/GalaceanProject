import { Engine, Entity } from "@galacean/engine-core";
import { IBasicType, IClassObject, IEntity } from "./PrefabDesign";
export declare class ReflectionParser {
    static customParseComponentHandles: Map<string, Function>;
    static registerCustomParseComponent(componentType: string, handle: Function): void;
    static parseEntity(entityConfig: IEntity, engine: Engine): Promise<Entity>;
    private static getEntityByConfig;
    static parseClassObject(item: IClassObject, engine: Engine, resourceManager?: any): Promise<any>;
    static parseBasicType(value: IBasicType, engine: Engine, resourceManager?: any): Promise<any>;
    static parsePropsAndMethods(instance: any, item: Omit<IClassObject, "class">, engine: Engine, resourceManager?: any): Promise<any>;
    static parseMethod(instance: any, methodName: string, methodParams: Array<IBasicType>, engine: Engine, resourceManager?: any): Promise<any>;
    private static _isClass;
    private static _isRef;
}
