/**
 * Smoothing plug-in.
 * */
export interface WebGLExtension {
    MAX_DRAW_BUFFERS: GLenum;
    UNSIGNED_INT_24_8: GLenum;
    MAX_SAMPLES: GLenum;
    RGBA8: GLenum;
    RGBA16F: GLenum;
    RGBA32F: GLenum;
    DEPTH_COMPONENT32F: GLenum;
    READ_FRAMEBUFFER: GLenum;
    DRAW_FRAMEBUFFER: GLenum;
    createVertexArray(): WebGLVertexArrayObject | null;
    deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;
    isVertexArray(vertexArray: WebGLVertexArrayObject | null): GLboolean;
    bindVertexArray(array: WebGLVertexArrayObject | null): void;
    renderbufferStorageMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei): void;
    blitFramebuffer(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum): void;
    drawArraysInstanced(mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei): void;
    drawElementsInstanced(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, instanceCount: GLsizei): void;
    vertexAttribDivisor(index: GLuint, divisor: GLuint): void;
    drawBuffers(buffers: Iterable<GLenum>): void;
}
export interface TextureFormatDetail {
    internalFormat: GLint;
    baseFormat?: GLenum;
    dataType?: GLenum;
    isCompressed: boolean;
    attachment?: GLenum;
}
/**
 * @deprecated
 */
export declare enum GLCompressedTextureInternalFormat {
    RGBA_ASTC_4X4_KHR = 37808,
    RGBA_ASTC_5X4_KHR = 37809,
    RGBA_ASTC_5X5_KHR = 37810,
    RGBA_ASTC_6X5_KHR = 37811,
    RGBA_ASTC_6X6_KHR = 37812,
    RGBA_ASTC_8X5_KHR = 37813,
    RGBA_ASTC_8X6_KHR = 37814,
    RGBA_ASTC_8X8_KHR = 37815,
    RGBA_ASTC_10X5_KHR = 37816,
    RGBA_ASTC_10X6_KHR = 37817,
    RGBA_ASTC_10X8_KHR = 37818,
    RGBA_ASTC_10X10_KHR = 37819,
    RGBA_ASTC_12X10_KHR = 37820,
    RGBA_ASTC_12X12_KHR = 37821,
    SRGB8_ALPHA8_ASTC_4X4_KHR = 37840,
    SRGB8_ALPHA8_ASTC_5X4_KHR = 37841,
    SRGB8_ALPHA8_ASTC_5X5_KHR = 37842,
    SRGB8_ALPHA8_ASTC_6X5_KHR = 37843,
    SRGB8_ALPHA8_ASTC_6X6_KHR = 37844,
    SRGB8_ALPHA8_ASTC_8X5_KHR = 37845,
    SRGB8_ALPHA8_ASTC_8X6_KHR = 37846,
    SRGB8_ALPHA8_ASTC_8X8_KHR = 37847,
    SRGB8_ALPHA8_ASTC_10X5_KHR = 37848,
    SRGB8_ALPHA8_ASTC_10X6_KHR = 37849,
    SRGB8_ALPHA8_ASTC_10X8_KHR = 37850,
    SRGB8_ALPHA8_ASTC_10X10_KHR = 37851,
    SRGB8_ALPHA8_ASTC_12X10_KHR = 37852,
    SRGB8_ALPHA8_ASTC_12X12_KHR = 37853,
    RGB_ETC1_WEBGL = 36196,
    R11_EAC = 37488,
    SIGNED_R11_EAC = 37489,
    RG11_EAC = 37490,
    SIGNED_RG11_EAC = 37491,
    RGB8_ETC2 = 37492,
    SRGB8_ETC2 = 37493,
    RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494,
    SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495,
    RGBA8_ETC2_EAC = 37496,
    SRGB8_ALPHA8_ETC2_EAC = 37497,
    RGB_PVRTC_4BPPV1_IMG = 35840,
    RGB_PVRTC_2BPPV1_IMG = 35841,
    RGBA_PVRTC_4BPPV1_IMG = 35842,
    RGBA_PVRTC_2BPPV1_IMG = 35843,
    RGB_S3TC_DXT1_EXT = 33776,
    RGBA_S3TC_DXT1_EXT = 33777,
    RGBA_S3TC_DXT3_EXT = 33778,
    RGBA_S3TC_DXT5_EXT = 33779
}
