import { IPlatformTextureCube, TextureCube, TextureCubeFace } from "@galacean/engine-core";
import { GLTexture } from "./GLTexture";
import { WebGLRenderer } from "./WebGLRenderer";
/**
 * Cube texture in WebGL platform.
 */
export declare class GLTextureCube extends GLTexture implements IPlatformTextureCube {
    /** Backward compatible with WebGL1.0. */
    private _compressedFaceFilled;
    constructor(rhi: WebGLRenderer, textureCube: TextureCube);
    /**
     * {@inheritDoc IPlatformTextureCube.setPixelBuffer}
     */
    setPixelBuffer(face: TextureCubeFace, colorBuffer: ArrayBufferView, mipLevel: number, x: number, y: number, width?: number, height?: number): void;
    /**
     * {@inheritDoc IPlatformTextureCube.setImageSource}
     */
    setImageSource(face: TextureCubeFace, imageSource: TexImageSource, mipLevel: number, flipY: boolean, premultiplyAlpha: boolean, x: number, y: number): void;
    /**
     * {@inheritDoc IPlatformTextureCube.getPixelBuffer}
     */
    getPixelBuffer(face: TextureCubeFace, x: number, y: number, width: number, height: number, mipLevel: number, out: ArrayBufferView): void;
}
