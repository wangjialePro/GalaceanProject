{"version":3,"file":"Spherical.js","sources":["../../src/Spherical.ts"],"sourcesContent":["import { MathUtil, Matrix, Vector3 } from \"@galacean/engine\";\n// Prevent gimbal lock.\nconst ESP = MathUtil.zeroTolerance;\n// Spherical.\nexport class Spherical {\n  private static _xAxis: Vector3 = new Vector3();\n  private static _yAxis: Vector3 = new Vector3();\n  private static _zAxis: Vector3 = new Vector3();\n  private _matrix: Matrix = new Matrix();\n  private _matrixInv: Matrix = new Matrix();\n  constructor(public radius?: number, public phi?: number, public theta?: number) {\n    this.radius = radius !== undefined ? radius : 1.0;\n    this.phi = phi !== undefined ? phi : 0;\n    this.theta = theta !== undefined ? theta : 0;\n  }\n\n  makeSafe(): Spherical {\n    const count = Math.floor(this.phi / Math.PI);\n    this.phi = MathUtil.clamp(this.phi, count * Math.PI + ESP, (count + 1) * Math.PI - ESP);\n    return this;\n  }\n\n  set(radius: number, phi: number, theta: number): Spherical {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this;\n  }\n\n  setYAxis(up: Vector3): void {\n    const { _xAxis: xAxis, _yAxis: yAxis, _zAxis: zAxis } = Spherical;\n    if (Vector3.equals(xAxis.set(1, 0, 0), yAxis.copyFrom(up).normalize())) {\n      xAxis.set(0, 1, 0);\n    }\n    Vector3.cross(xAxis, yAxis, zAxis);\n    zAxis.normalize();\n    Vector3.cross(yAxis, zAxis, xAxis);\n    const { elements: es } = this._matrix;\n    (es[0] = xAxis.x), (es[1] = xAxis.y), (es[2] = xAxis.z);\n    (es[4] = yAxis.x), (es[5] = yAxis.y), (es[6] = yAxis.z);\n    (es[8] = zAxis.x), (es[9] = zAxis.y), (es[10] = zAxis.z);\n\n    const { elements: eInv } = this._matrixInv;\n    (eInv[0] = xAxis.x), (eInv[4] = xAxis.y), (eInv[8] = xAxis.z);\n    (eInv[1] = yAxis.x), (eInv[5] = yAxis.y), (eInv[9] = yAxis.z);\n    (eInv[2] = zAxis.x), (eInv[6] = zAxis.y), (eInv[10] = zAxis.z);\n  }\n\n  setFromVec3(value: Vector3, atTheBack: boolean = false): Spherical {\n    value.transformNormal(this._matrixInv);\n    this.radius = value.length();\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      if (atTheBack) {\n        this.phi = 2 * Math.PI - Math.acos(MathUtil.clamp(value.y / this.radius, -1, 1));\n        this.theta = Math.atan2(-value.x, -value.z);\n      } else {\n        this.phi = Math.acos(MathUtil.clamp(value.y / this.radius, -1, 1));\n        this.theta = Math.atan2(value.x, value.z);\n      }\n    }\n    return this;\n  }\n\n  setToVec3(value: Vector3): boolean {\n    const { radius, phi, theta } = this;\n    const sinPhiRadius = Math.sin(phi) * radius;\n    this.phi -= Math.floor(this.phi / Math.PI / 2) * Math.PI * 2;\n    value.set(sinPhiRadius * Math.sin(theta), radius * Math.cos(phi), sinPhiRadius * Math.cos(theta));\n    value.transformNormal(this._matrix);\n    return this.phi > Math.PI;\n  }\n}\n"],"names":["ESP","MathUtil","zeroTolerance","Spherical","radius","phi","theta","_matrix","Matrix","_matrixInv","undefined","makeSafe","count","Math","floor","PI","clamp","set","setYAxis","up","xAxis","_xAxis","_yAxis","yAxis","_zAxis","zAxis","Vector3","equals","copyFrom","normalize","cross","es","elements","x","y","z","eInv","setFromVec3","value","atTheBack","transformNormal","length","acos","atan2","setToVec3","sinPhiRadius","sin","cos"],"mappings":"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"}