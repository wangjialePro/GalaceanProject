{"version":3,"file":"ControlFreePointer.js","sources":["../../../src/inputDevice/ControlFreePointer.ts"],"sourcesContent":["import { InputManager, PointerButton, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"../enums/ControlHandlerType\";\nimport { OrbitControl } from \"../OrbitControl\";\nimport { IControlInput } from \"./IControlInput\";\nimport { StaticInterfaceImplement } from \"./StaticInterfaceImplement\";\n\nenum DeltaType {\n  Moving,\n  Distance,\n  None\n}\n@StaticInterfaceImplement<IControlInput>()\nexport class ControlFreePointer {\n  private static _deltaType: DeltaType = DeltaType.Moving;\n  private static _handlerType: ControlHandlerType = ControlHandlerType.None;\n  private static _frameIndex: number = 0;\n  private static _lastUsefulFrameIndex: number = -1;\n  static onUpdateHandler(input: InputManager): ControlHandlerType {\n    ++this._frameIndex;\n    if (input.pointers.length === 1) {\n      if (input.isPointerHeldDown(PointerButton.Primary)) {\n        this._updateType(ControlHandlerType.ROTATE, DeltaType.Moving);\n      } else {\n        const { deltaPosition } = input.pointers[0];\n        if ((deltaPosition.x !== 0 || deltaPosition.y !== 0) && input.isPointerUp(PointerButton.Primary)) {\n          this._updateType(ControlHandlerType.ROTATE, DeltaType.Moving);\n        } else {\n          this._updateType(ControlHandlerType.None, DeltaType.None);\n        }\n      }\n    } else {\n      this._updateType(ControlHandlerType.None, DeltaType.None);\n    }\n    return this._handlerType;\n  }\n\n  static onUpdateDelta(control: OrbitControl, outDelta: Vector3): void {\n    const { _frameIndex: frameIndex } = this;\n    switch (this._deltaType) {\n      case DeltaType.Moving:\n        if (this._lastUsefulFrameIndex === frameIndex - 1) {\n          const { deltaPosition } = control.input.pointers[0];\n          outDelta.x = deltaPosition.x;\n          outDelta.y = deltaPosition.y;\n        } else {\n          outDelta.x = 0;\n          outDelta.y = 0;\n        }\n        break;\n      default:\n        break;\n    }\n    this._lastUsefulFrameIndex = frameIndex;\n  }\n\n  private static _updateType(handlerType: ControlHandlerType, deltaType: DeltaType) {\n    if (this._handlerType !== handlerType || this._deltaType !== deltaType) {\n      this._handlerType = handlerType;\n      this._deltaType = deltaType;\n      this._lastUsefulFrameIndex = -1;\n    }\n  }\n}\n"],"names":["DeltaType","Moving","Distance","None","ControlFreePointer","onUpdateHandler","input","_frameIndex","pointers","length","isPointerHeldDown","PointerButton","Primary","_updateType","ControlHandlerType","ROTATE","deltaPosition","x","y","isPointerUp","_handlerType","onUpdateDelta","control","outDelta","frameIndex","_deltaType","_lastUsefulFrameIndex","handlerType","deltaType","StaticInterfaceImplement"],"mappings":";;;;;;AAMA,IAAA,SAAA,CAAA;UAAKA,SAAS,EAAA;IAATA,SAAAA,CAAAA,SAAAA,CACHC,YAAAA,CAAAA,CAAAA,GAAAA,QAAAA,CAAAA;IADGD,SAAAA,CAAAA,SAAAA,CAEHE,cAAAA,CAAAA,CAAAA,GAAAA,UAAAA,CAAAA;IAFGF,SAAAA,CAAAA,SAAAA,CAGHG,UAAAA,CAAAA,CAAAA,GAAAA,MAAAA,CAAAA;GAHGH,SAAAA,KAAAA,SAAAA,GAAAA,EAAAA,CAAAA,CAAAA,CAAAA;AAML,IAAaI,kBAAN,IAAA,mBAAA,iBAAA,WAAA;;AAKL,IAAA,kBAAA,CAAOC,eAiBN,GAjBD,SAAOA,eAAAA,CAAgBC,KAAmB,EAAsB;QAC9D,EAAE,IAAI,CAACC,WAAW,CAAA;AAClB,QAAA,IAAID,KAAME,CAAAA,QAAQ,CAACC,MAAM,KAAK,CAAG,EAAA;AAC/B,YAAA,IAAIH,KAAMI,CAAAA,iBAAiB,CAACC,aAAAA,CAAcC,OAAO,CAAG,EAAA;AAClD,gBAAA,IAAI,CAACC,WAAW,CAACC,kBAAAA,CAAmBC,MAAM,EAdhDd,CAAAA,CAAAA,CAAAA;aAeW,MAAA;AACL,gBAAA,IAAM,aAAoBK,GAAAA,KAAAA,CAAME,QAAQ,CAAC,EAAE,CAAnCQ,aAAAA,CAAAA;AACR,gBAAA,IAAI,CAACA,aAAAA,CAAcC,CAAC,KAAK,KAAKD,aAAcE,CAAAA,CAAC,KAAK,CAAA,KAAMZ,KAAMa,CAAAA,WAAW,CAACR,aAAAA,CAAcC,OAAO,CAAG,EAAA;AAChG,oBAAA,IAAI,CAACC,WAAW,CAACC,kBAAAA,CAAmBC,MAAM,EAlBlDd,CAAAA,CAAAA,CAAAA;iBAmBa,MAAA;AACL,oBAAA,IAAI,CAACY,WAAW,CAACC,kBAAAA,CAAmBX,IAAI,EAlBhDA,CAAAA,CAAAA,CAAAA;iBAmBO;aACF;SACI,MAAA;AACL,YAAA,IAAI,CAACU,WAAW,CAACC,kBAAAA,CAAmBX,IAAI,EAtB5CA,CAAAA,CAAAA,CAAAA;SAuBG;QACD,OAAO,IAAI,CAACiB,YAAY,CAAA;AAC1B,KAAA,CAAA;AAEA,IAAA,kBAAA,CAAOC,aAiBN,GAjBD,SAAOA,cAAcC,OAAqB,EAAEC,QAAiB,EAAQ;AACnE,QAAA,IAAoC,KAAA,GAAA,IAAI,EAAnBC,aAAe,KAA5BjB,CAAAA,WAAAA,CAAAA;QACR,OAAQ,IAAI,CAACkB,UAAU;YACrB,KAhCJxB,CAAAA;AAiCM,gBAAA,IAAI,IAAI,CAACyB,qBAAqB,KAAKF,aAAa,CAAG,EAAA;oBACjD,IAAQR,gBAAkBM,OAAQhB,CAAAA,KAAK,CAACE,QAAQ,CAAC,EAAE,CAA3CQ,aAAAA,CAAAA;oBACRO,QAASN,CAAAA,CAAC,GAAGD,aAAAA,CAAcC,CAAC,CAAA;oBAC5BM,QAASL,CAAAA,CAAC,GAAGF,aAAAA,CAAcE,CAAC,CAAA;iBACvB,MAAA;AACLK,oBAAAA,QAAAA,CAASN,CAAC,GAAG,CAAA,CAAA;AACbM,oBAAAA,QAAAA,CAASL,CAAC,GAAG,CAAA,CAAA;iBACd;gBACD,MAAM;AAGV,SAAA;QACA,IAAI,CAACQ,qBAAqB,GAAGF,UAAAA,CAAAA;AAC/B,KAAA,CAAA;AAEA,IAAA,kBAAA,CAAeX,WAMd,GAND,SAAeA,YAAYc,WAA+B,EAAEC,SAAoB,EAAE;QAChF,IAAI,IAAI,CAACR,YAAY,KAAKO,eAAe,IAAI,CAACF,UAAU,KAAKG,SAAW,EAAA;YACtE,IAAI,CAACR,YAAY,GAAGO,WAAAA,CAAAA;YACpB,IAAI,CAACF,UAAU,GAAGG,SAAAA,CAAAA;YAClB,IAAI,CAACF,qBAAqB,GAAG,CAAC,CAAA,CAAA;SAC/B;AACH,KAAA,CAAA;;;wBAhDeD,UANfxB,GAAAA,CAAAA,CAAAA;;AAOemB,IAAAA,mBAAAA,CAAAA,YAAAA,GAAmCN,mBAAmBX,IAAI,CAAA;;wBAC1DI,WAAsB,GAAA,CAAA,CAAA;;AACtBmB,IAAAA,mBAAAA,CAAAA,qBAAAA,GAAgC,CAAC,CAAA,CAAA;AA8CjD,CAAA,EAAA,EAAA,mBAAA,EAAA;AAlDYtB,kBAAAA,GAAAA,UAAAA,CAAAA;AADZyB,IAAAA,wBAAAA,EAAAA;AACYzB,CAAAA,EAAAA,kBAAAA,CAAAA;;;;"}