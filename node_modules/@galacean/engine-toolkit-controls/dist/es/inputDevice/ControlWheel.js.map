{"version":3,"file":"ControlWheel.js","sources":["../../../src/inputDevice/ControlWheel.ts"],"sourcesContent":["import { InputManager, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"../enums/ControlHandlerType\";\nimport { OrbitControl } from \"../OrbitControl\";\nimport { IControlInput } from \"./IControlInput\";\nimport { StaticInterfaceImplement } from \"./StaticInterfaceImplement\";\n\n@StaticInterfaceImplement<IControlInput>()\nexport class ControlWheel {\n  static onUpdateHandler(input: InputManager): ControlHandlerType {\n    const { wheelDelta } = input;\n    if (wheelDelta.x === 0 && wheelDelta.y === 0 && wheelDelta.z === 0) {\n      return ControlHandlerType.None;\n    } else {\n      return ControlHandlerType.ZOOM;\n    }\n  }\n\n  static onUpdateDelta(control: OrbitControl, outDelta: Vector3): void {\n    outDelta.copyFrom(control.input.wheelDelta);\n  }\n}\n"],"names":["ControlWheel","onUpdateHandler","input","wheelDelta","x","y","z","ControlHandlerType","None","ZOOM","onUpdateDelta","control","outDelta","copyFrom","StaticInterfaceImplement"],"mappings":";;;;AAOA,IAAaA,YAAN,iBAAA,WAAA;;AACL,IAAA,YAAA,CAAOC,eAON,GAPD,SAAOA,eAAAA,CAAgBC,KAAmB,EAAsB;QAC9D,IAAQC,aAAeD,KAAfC,CAAAA,UAAAA,CAAAA;QACR,IAAIA,UAAAA,CAAWC,CAAC,KAAK,CAAKD,IAAAA,UAAAA,CAAWE,CAAC,KAAK,CAAKF,IAAAA,UAAAA,CAAWG,CAAC,KAAK,CAAG,EAAA;AAClE,YAAA,OAAOC,mBAAmBC,IAAI,CAAA;SACzB,MAAA;AACL,YAAA,OAAOD,mBAAmBE,IAAI,CAAA;SAC/B;AACH,KAAA,CAAA;AAEA,IAAA,YAAA,CAAOC,aAEN,GAFD,SAAOA,cAAcC,OAAqB,EAAEC,QAAiB,EAAQ;AACnEA,QAAAA,QAAAA,CAASC,QAAQ,CAACF,OAAQT,CAAAA,KAAK,CAACC,UAAU,CAAA,CAAA;AAC5C,KAAA,CAAA;;AACD,CAAA,GAAA;AAbYH,YAAAA,GAAAA,UAAAA,CAAAA;AADZc,IAAAA,wBAAAA,EAAAA;AACYd,CAAAA,EAAAA,YAAAA,CAAAA;;;;"}