{"version":3,"file":"ControlFreeKeyboard.js","sources":["../../../src/inputDevice/ControlFreeKeyboard.ts"],"sourcesContent":["import { InputManager, Keys, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"../enums/ControlHandlerType\";\nimport { FreeControl } from \"../FreeControl\";\nimport { IControlInput } from \"./IControlInput\";\nimport { StaticInterfaceImplement } from \"./StaticInterfaceImplement\";\n\n@StaticInterfaceImplement<IControlInput>()\nexport class ControlFreeKeyboard {\n  static onUpdateHandler(input: InputManager): ControlHandlerType {\n    if (\n      input.isKeyHeldDown(Keys.ArrowLeft) ||\n      input.isKeyHeldDown(Keys.KeyA) ||\n      input.isKeyHeldDown(Keys.ArrowUp) ||\n      input.isKeyHeldDown(Keys.KeyW) ||\n      input.isKeyHeldDown(Keys.ArrowDown) ||\n      input.isKeyHeldDown(Keys.KeyS) ||\n      input.isKeyHeldDown(Keys.ArrowRight) ||\n      input.isKeyHeldDown(Keys.KeyD)\n    ) {\n      return ControlHandlerType.PAN;\n    } else {\n      return ControlHandlerType.None;\n    }\n  }\n\n  static onUpdateDelta(control: FreeControl, outDelta: Vector3): void {\n    const { movementSpeed, input } = control;\n    outDelta.x = outDelta.y = outDelta.z = 0;\n    if (input.isKeyHeldDown(Keys.ArrowLeft) || input.isKeyHeldDown(Keys.KeyA)) {\n      outDelta.x -= movementSpeed;\n    }\n    if (input.isKeyHeldDown(Keys.ArrowRight) || input.isKeyHeldDown(Keys.KeyD)) {\n      outDelta.x += movementSpeed;\n    }\n    if (input.isKeyHeldDown(Keys.ArrowUp) || input.isKeyHeldDown(Keys.KeyW)) {\n      outDelta.z -= movementSpeed;\n    }\n    if (input.isKeyHeldDown(Keys.ArrowDown) || input.isKeyHeldDown(Keys.KeyS)) {\n      outDelta.z += movementSpeed;\n    }\n  }\n}\n"],"names":["ControlFreeKeyboard","onUpdateHandler","input","isKeyHeldDown","Keys","ArrowLeft","KeyA","ArrowUp","KeyW","ArrowDown","KeyS","ArrowRight","KeyD","ControlHandlerType","PAN","None","onUpdateDelta","control","outDelta","movementSpeed","x","y","z","StaticInterfaceImplement"],"mappings":";;;;;AAOA,IAAaA,mBAAN,iBAAA,WAAA;;AACL,IAAA,mBAAA,CAAOC,eAeN,GAfD,SAAOA,eAAAA,CAAgBC,KAAmB,EAAsB;QAC9D,IACEA,KAAAA,CAAMC,aAAa,CAACC,IAAAA,CAAKC,SAAS,CAClCH,IAAAA,KAAAA,CAAMC,aAAa,CAACC,IAAAA,CAAKE,IAAI,CAC7BJ,IAAAA,KAAAA,CAAMC,aAAa,CAACC,IAAAA,CAAKG,OAAO,CAChCL,IAAAA,KAAAA,CAAMC,aAAa,CAACC,IAAKI,CAAAA,IAAI,KAC7BN,KAAMC,CAAAA,aAAa,CAACC,IAAKK,CAAAA,SAAS,KAClCP,KAAMC,CAAAA,aAAa,CAACC,IAAAA,CAAKM,IAAI,CAAA,IAC7BR,MAAMC,aAAa,CAACC,KAAKO,UAAU,CAAA,IACnCT,MAAMC,aAAa,CAACC,IAAKQ,CAAAA,IAAI,CAC7B,EAAA;AACA,YAAA,OAAOC,mBAAmBC,GAAG,CAAA;SACxB,MAAA;AACL,YAAA,OAAOD,mBAAmBE,IAAI,CAAA;SAC/B;AACH,KAAA,CAAA;AAEA,IAAA,mBAAA,CAAOC,aAeN,GAfD,SAAOA,cAAcC,OAAoB,EAAEC,QAAiB,EAAQ;AAClE,QAAA,IAAQC,aAAyBF,GAAAA,OAAAA,CAAzBE,aAAejB,EAAAA,KAAAA,GAAUe,OAAVf,CAAAA,KAAAA,CAAAA;AACvBgB,QAAAA,QAAAA,CAASE,CAAC,GAAGF,QAAAA,CAASG,CAAC,GAAGH,QAAAA,CAASI,CAAC,GAAG,CAAA,CAAA;QACvC,IAAIpB,KAAAA,CAAMC,aAAa,CAACC,IAAKC,CAAAA,SAAS,CAAKH,IAAAA,KAAAA,CAAMC,aAAa,CAACC,IAAKE,CAAAA,IAAI,CAAG,EAAA;AACzEY,YAAAA,QAAAA,CAASE,CAAC,IAAID,aAAAA,CAAAA;SACf;QACD,IAAIjB,KAAAA,CAAMC,aAAa,CAACC,IAAKO,CAAAA,UAAU,CAAKT,IAAAA,KAAAA,CAAMC,aAAa,CAACC,IAAKQ,CAAAA,IAAI,CAAG,EAAA;AAC1EM,YAAAA,QAAAA,CAASE,CAAC,IAAID,aAAAA,CAAAA;SACf;QACD,IAAIjB,KAAAA,CAAMC,aAAa,CAACC,IAAKG,CAAAA,OAAO,CAAKL,IAAAA,KAAAA,CAAMC,aAAa,CAACC,IAAKI,CAAAA,IAAI,CAAG,EAAA;AACvEU,YAAAA,QAAAA,CAASI,CAAC,IAAIH,aAAAA,CAAAA;SACf;QACD,IAAIjB,KAAAA,CAAMC,aAAa,CAACC,IAAKK,CAAAA,SAAS,CAAKP,IAAAA,KAAAA,CAAMC,aAAa,CAACC,IAAKM,CAAAA,IAAI,CAAG,EAAA;AACzEQ,YAAAA,QAAAA,CAASI,CAAC,IAAIH,aAAAA,CAAAA;SACf;AACH,KAAA,CAAA;;AACD,CAAA,GAAA;AAlCYnB,mBAAAA,GAAAA,UAAAA,CAAAA;AADZuB,IAAAA,wBAAAA,EAAAA;AACYvB,CAAAA,EAAAA,mBAAAA,CAAAA;;;;"}