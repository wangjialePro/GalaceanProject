{"version":3,"file":"FreeControl.js","sources":["../../../../node_modules/.pnpm/@swc+helpers@0.5.0/node_modules/@swc/helpers/esm/_assert_this_initialized.js","../../src/FreeControl.ts"],"sourcesContent":["export function _assert_this_initialized(self) {\n    if (self === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\n    return self;\n}\nexport { _assert_this_initialized as _ };\n","import { Entity, InputManager, MathUtil, Script, Transform, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"./enums/ControlHandlerType\";\nimport { ControlFreeKeyboard } from \"./inputDevice/ControlFreeKeyboard\";\nimport { ControlFreePointer } from \"./inputDevice/ControlFreePointer\";\nimport { IControlInput } from \"./inputDevice/IControlInput\";\nimport { Spherical } from \"./Spherical\";\n\n/**\n * The camera's roaming controller, can move up and down, left and right, and rotate the viewing angle.\n */\nexport class FreeControl extends Script {\n  input: InputManager;\n  inputDevices: IControlInput[] = [ControlFreeKeyboard, ControlFreePointer];\n\n  /** Movement distance per second, the unit is the unit before MVP conversion. */\n  movementSpeed: number = 1.0;\n  /** Rotate speed. */\n  rotateSpeed: number = 1.0;\n  /** Simulate a ground. */\n  floorMock: boolean = true;\n  /** Simulated ground height. */\n  floorY: number = 0;\n\n  private _cameraTransform: Transform;\n  private _spherical: Spherical = new Spherical();\n  private _tempVec: Vector3 = new Vector3();\n  private _atTheBack: boolean = false;\n  private _topVec: Vector3 = new Vector3(0, 1, 0);\n  private _bottomVec: Vector3 = new Vector3(0, -1, 0);\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.input = this.engine.inputManager;\n    const transform = (this._cameraTransform = entity.transform);\n    /** Init spherical. */\n    const { _tempVec: tempVec, _spherical: spherical } = this;\n    Vector3.transformByQuat(tempVec.set(0, 0, -1), transform.rotationQuaternion, tempVec);\n    spherical.setFromVec3(tempVec, this._atTheBack);\n  }\n\n  override onUpdate(deltaTime: number): void {\n    if (this.enabled === false) return;\n    let curHandlerType = ControlHandlerType.None;\n    const { _tempVec: delta } = this;\n    const { inputDevices, input } = this;\n    for (let i = inputDevices.length - 1; i >= 0; i--) {\n      const handler = inputDevices[i];\n      const handlerType = handler.onUpdateHandler(input);\n      if (handlerType) {\n        curHandlerType |= handlerType;\n        handler.onUpdateDelta(this, delta);\n        switch (handlerType) {\n          case ControlHandlerType.ROTATE:\n            this._rotate(delta);\n            break;\n          case ControlHandlerType.PAN:\n            this._pan(delta, deltaTime);\n            break;\n          default:\n            break;\n        }\n      }\n    }\n    if (this.floorMock) {\n      const position = this._cameraTransform.position;\n      if (position.y !== this.floorY) {\n        this._cameraTransform.setPosition(position.x, this.floorY, position.z);\n      }\n    }\n  }\n\n  private _pan(moveDelta: Vector3, delta: number): void {\n    const actualMoveSpeed = (delta / 1000) * this.movementSpeed;\n    moveDelta.normalize().scale(actualMoveSpeed);\n    this._cameraTransform.translate(moveDelta, true);\n  }\n\n  private _rotate(moveDelta: Vector3): void {\n    if (moveDelta.x !== 0 || moveDelta.y !== 0) {\n      const canvas = this.engine.canvas;\n      const deltaAlpha = (-moveDelta.x * 180) / canvas.width;\n      const deltaPhi = (moveDelta.y * 180) / canvas.height;\n      this._spherical.theta += MathUtil.degreeToRadian(deltaAlpha);\n      this._spherical.phi += MathUtil.degreeToRadian(deltaPhi);\n      this._spherical.makeSafe();\n      this._atTheBack = this._spherical.setToVec3(this._tempVec);\n      Vector3.add(this._cameraTransform.position, this._tempVec, this._tempVec);\n      this._atTheBack\n        ? this._cameraTransform.lookAt(this._tempVec, this._bottomVec)\n        : this._cameraTransform.lookAt(this._tempVec, this._topVec);\n    }\n  }\n}\n"],"names":["FreeControl","entity","inputDevices","ControlFreeKeyboard","ControlFreePointer","movementSpeed","rotateSpeed","floorMock","floorY","_spherical","Spherical","_tempVec","Vector3","_atTheBack","_topVec","_bottomVec","input","engine","inputManager","transform","_cameraTransform","tempVec","transformByQuat","set","rotationQuaternion","spherical","setFromVec3","onUpdate","deltaTime","enabled","ControlHandlerType","None","delta","i","length","handler","handlerType","onUpdateHandler","onUpdateDelta","ROTATE","_rotate","PAN","_pan","position","y","setPosition","x","z","moveDelta","actualMoveSpeed","normalize","scale","translate","canvas","deltaAlpha","width","deltaPhi","height","theta","MathUtil","degreeToRadian","phi","makeSafe","setToVec3","add","lookAt","Script"],"mappings":"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","x_google_ignoreList":[0]}