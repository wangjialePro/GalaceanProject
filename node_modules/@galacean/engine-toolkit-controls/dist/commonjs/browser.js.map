{"version":3,"file":"browser.js","sources":["../../../../node_modules/.pnpm/@swc+helpers@0.5.0/node_modules/@swc/helpers/esm/_assert_this_initialized.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.0/node_modules/@swc/helpers/esm/_set_prototype_of.js","../../../../node_modules/.pnpm/@swc+helpers@0.5.0/node_modules/@swc/helpers/esm/_inherits.js","../../src/enums/ControlHandlerType.ts","../../../../node_modules/.pnpm/tslib@2.5.0/node_modules/tslib/tslib.es6.js","../../src/inputDevice/StaticInterfaceImplement.ts","../../src/inputDevice/ControlFreeKeyboard.ts","../../src/inputDevice/ControlFreePointer.ts","../../src/Spherical.ts","../../src/FreeControl.ts","../../../../node_modules/.pnpm/@swc+helpers@0.5.0/node_modules/@swc/helpers/esm/_create_class.js","../../src/inputDevice/ControlKeyboard.ts","../../src/inputDevice/ControlPointer.ts","../../src/inputDevice/ControlWheel.ts","../../src/OrbitControl.ts","../../src/OrthoControl.ts"],"sourcesContent":["export function _assert_this_initialized(self) {\n    if (self === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\n    return self;\n}\nexport { _assert_this_initialized as _ };\n","export function _set_prototype_of(o, p) {\n    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n\n        return o;\n    };\n\n    return _set_prototype_of(o, p);\n}\nexport { _set_prototype_of as _ };\n","import { _set_prototype_of } from \"./_set_prototype_of.js\";\n\nexport function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });\n\n    if (superClass) _set_prototype_of(subClass, superClass);\n}\nexport { _inherits as _ };\n","export enum ControlHandlerType {\n  None = 0,\n  ROTATE = 1,\n  ZOOM = 2,\n  PAN = 4,\n  All = 7\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n *  Static interface implement decorator.\n *  https://stackoverflow.com/questions/13955157/how-to-define-static-property-in-typescript-interface\n */\n export function StaticInterfaceImplement<T>() {\n    return <U extends T>(constructor: U) => {\n      constructor;\n    };\n  }\n  ","import { InputManager, Keys, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"../enums/ControlHandlerType\";\nimport { FreeControl } from \"../FreeControl\";\nimport { IControlInput } from \"./IControlInput\";\nimport { StaticInterfaceImplement } from \"./StaticInterfaceImplement\";\n\n@StaticInterfaceImplement<IControlInput>()\nexport class ControlFreeKeyboard {\n  static onUpdateHandler(input: InputManager): ControlHandlerType {\n    if (\n      input.isKeyHeldDown(Keys.ArrowLeft) ||\n      input.isKeyHeldDown(Keys.KeyA) ||\n      input.isKeyHeldDown(Keys.ArrowUp) ||\n      input.isKeyHeldDown(Keys.KeyW) ||\n      input.isKeyHeldDown(Keys.ArrowDown) ||\n      input.isKeyHeldDown(Keys.KeyS) ||\n      input.isKeyHeldDown(Keys.ArrowRight) ||\n      input.isKeyHeldDown(Keys.KeyD)\n    ) {\n      return ControlHandlerType.PAN;\n    } else {\n      return ControlHandlerType.None;\n    }\n  }\n\n  static onUpdateDelta(control: FreeControl, outDelta: Vector3): void {\n    const { movementSpeed, input } = control;\n    outDelta.x = outDelta.y = outDelta.z = 0;\n    if (input.isKeyHeldDown(Keys.ArrowLeft) || input.isKeyHeldDown(Keys.KeyA)) {\n      outDelta.x -= movementSpeed;\n    }\n    if (input.isKeyHeldDown(Keys.ArrowRight) || input.isKeyHeldDown(Keys.KeyD)) {\n      outDelta.x += movementSpeed;\n    }\n    if (input.isKeyHeldDown(Keys.ArrowUp) || input.isKeyHeldDown(Keys.KeyW)) {\n      outDelta.z -= movementSpeed;\n    }\n    if (input.isKeyHeldDown(Keys.ArrowDown) || input.isKeyHeldDown(Keys.KeyS)) {\n      outDelta.z += movementSpeed;\n    }\n  }\n}\n","import { InputManager, PointerButton, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"../enums/ControlHandlerType\";\nimport { OrbitControl } from \"../OrbitControl\";\nimport { IControlInput } from \"./IControlInput\";\nimport { StaticInterfaceImplement } from \"./StaticInterfaceImplement\";\n\nenum DeltaType {\n  Moving,\n  Distance,\n  None\n}\n@StaticInterfaceImplement<IControlInput>()\nexport class ControlFreePointer {\n  private static _deltaType: DeltaType = DeltaType.Moving;\n  private static _handlerType: ControlHandlerType = ControlHandlerType.None;\n  private static _frameIndex: number = 0;\n  private static _lastUsefulFrameIndex: number = -1;\n  static onUpdateHandler(input: InputManager): ControlHandlerType {\n    ++this._frameIndex;\n    if (input.pointers.length === 1) {\n      if (input.isPointerHeldDown(PointerButton.Primary)) {\n        this._updateType(ControlHandlerType.ROTATE, DeltaType.Moving);\n      } else {\n        const { deltaPosition } = input.pointers[0];\n        if ((deltaPosition.x !== 0 || deltaPosition.y !== 0) && input.isPointerUp(PointerButton.Primary)) {\n          this._updateType(ControlHandlerType.ROTATE, DeltaType.Moving);\n        } else {\n          this._updateType(ControlHandlerType.None, DeltaType.None);\n        }\n      }\n    } else {\n      this._updateType(ControlHandlerType.None, DeltaType.None);\n    }\n    return this._handlerType;\n  }\n\n  static onUpdateDelta(control: OrbitControl, outDelta: Vector3): void {\n    const { _frameIndex: frameIndex } = this;\n    switch (this._deltaType) {\n      case DeltaType.Moving:\n        if (this._lastUsefulFrameIndex === frameIndex - 1) {\n          const { deltaPosition } = control.input.pointers[0];\n          outDelta.x = deltaPosition.x;\n          outDelta.y = deltaPosition.y;\n        } else {\n          outDelta.x = 0;\n          outDelta.y = 0;\n        }\n        break;\n      default:\n        break;\n    }\n    this._lastUsefulFrameIndex = frameIndex;\n  }\n\n  private static _updateType(handlerType: ControlHandlerType, deltaType: DeltaType) {\n    if (this._handlerType !== handlerType || this._deltaType !== deltaType) {\n      this._handlerType = handlerType;\n      this._deltaType = deltaType;\n      this._lastUsefulFrameIndex = -1;\n    }\n  }\n}\n","import { MathUtil, Matrix, Vector3 } from \"@galacean/engine\";\n// Prevent gimbal lock.\nconst ESP = MathUtil.zeroTolerance;\n// Spherical.\nexport class Spherical {\n  private static _xAxis: Vector3 = new Vector3();\n  private static _yAxis: Vector3 = new Vector3();\n  private static _zAxis: Vector3 = new Vector3();\n  private _matrix: Matrix = new Matrix();\n  private _matrixInv: Matrix = new Matrix();\n  constructor(public radius?: number, public phi?: number, public theta?: number) {\n    this.radius = radius !== undefined ? radius : 1.0;\n    this.phi = phi !== undefined ? phi : 0;\n    this.theta = theta !== undefined ? theta : 0;\n  }\n\n  makeSafe(): Spherical {\n    const count = Math.floor(this.phi / Math.PI);\n    this.phi = MathUtil.clamp(this.phi, count * Math.PI + ESP, (count + 1) * Math.PI - ESP);\n    return this;\n  }\n\n  set(radius: number, phi: number, theta: number): Spherical {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this;\n  }\n\n  setYAxis(up: Vector3): void {\n    const { _xAxis: xAxis, _yAxis: yAxis, _zAxis: zAxis } = Spherical;\n    if (Vector3.equals(xAxis.set(1, 0, 0), yAxis.copyFrom(up).normalize())) {\n      xAxis.set(0, 1, 0);\n    }\n    Vector3.cross(xAxis, yAxis, zAxis);\n    zAxis.normalize();\n    Vector3.cross(yAxis, zAxis, xAxis);\n    const { elements: es } = this._matrix;\n    (es[0] = xAxis.x), (es[1] = xAxis.y), (es[2] = xAxis.z);\n    (es[4] = yAxis.x), (es[5] = yAxis.y), (es[6] = yAxis.z);\n    (es[8] = zAxis.x), (es[9] = zAxis.y), (es[10] = zAxis.z);\n\n    const { elements: eInv } = this._matrixInv;\n    (eInv[0] = xAxis.x), (eInv[4] = xAxis.y), (eInv[8] = xAxis.z);\n    (eInv[1] = yAxis.x), (eInv[5] = yAxis.y), (eInv[9] = yAxis.z);\n    (eInv[2] = zAxis.x), (eInv[6] = zAxis.y), (eInv[10] = zAxis.z);\n  }\n\n  setFromVec3(value: Vector3, atTheBack: boolean = false): Spherical {\n    value.transformNormal(this._matrixInv);\n    this.radius = value.length();\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      if (atTheBack) {\n        this.phi = 2 * Math.PI - Math.acos(MathUtil.clamp(value.y / this.radius, -1, 1));\n        this.theta = Math.atan2(-value.x, -value.z);\n      } else {\n        this.phi = Math.acos(MathUtil.clamp(value.y / this.radius, -1, 1));\n        this.theta = Math.atan2(value.x, value.z);\n      }\n    }\n    return this;\n  }\n\n  setToVec3(value: Vector3): boolean {\n    const { radius, phi, theta } = this;\n    const sinPhiRadius = Math.sin(phi) * radius;\n    this.phi -= Math.floor(this.phi / Math.PI / 2) * Math.PI * 2;\n    value.set(sinPhiRadius * Math.sin(theta), radius * Math.cos(phi), sinPhiRadius * Math.cos(theta));\n    value.transformNormal(this._matrix);\n    return this.phi > Math.PI;\n  }\n}\n","import { Entity, InputManager, MathUtil, Script, Transform, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"./enums/ControlHandlerType\";\nimport { ControlFreeKeyboard } from \"./inputDevice/ControlFreeKeyboard\";\nimport { ControlFreePointer } from \"./inputDevice/ControlFreePointer\";\nimport { IControlInput } from \"./inputDevice/IControlInput\";\nimport { Spherical } from \"./Spherical\";\n\n/**\n * The camera's roaming controller, can move up and down, left and right, and rotate the viewing angle.\n */\nexport class FreeControl extends Script {\n  input: InputManager;\n  inputDevices: IControlInput[] = [ControlFreeKeyboard, ControlFreePointer];\n\n  /** Movement distance per second, the unit is the unit before MVP conversion. */\n  movementSpeed: number = 1.0;\n  /** Rotate speed. */\n  rotateSpeed: number = 1.0;\n  /** Simulate a ground. */\n  floorMock: boolean = true;\n  /** Simulated ground height. */\n  floorY: number = 0;\n\n  private _cameraTransform: Transform;\n  private _spherical: Spherical = new Spherical();\n  private _tempVec: Vector3 = new Vector3();\n  private _atTheBack: boolean = false;\n  private _topVec: Vector3 = new Vector3(0, 1, 0);\n  private _bottomVec: Vector3 = new Vector3(0, -1, 0);\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.input = this.engine.inputManager;\n    const transform = (this._cameraTransform = entity.transform);\n    /** Init spherical. */\n    const { _tempVec: tempVec, _spherical: spherical } = this;\n    Vector3.transformByQuat(tempVec.set(0, 0, -1), transform.rotationQuaternion, tempVec);\n    spherical.setFromVec3(tempVec, this._atTheBack);\n  }\n\n  override onUpdate(deltaTime: number): void {\n    if (this.enabled === false) return;\n    let curHandlerType = ControlHandlerType.None;\n    const { _tempVec: delta } = this;\n    const { inputDevices, input } = this;\n    for (let i = inputDevices.length - 1; i >= 0; i--) {\n      const handler = inputDevices[i];\n      const handlerType = handler.onUpdateHandler(input);\n      if (handlerType) {\n        curHandlerType |= handlerType;\n        handler.onUpdateDelta(this, delta);\n        switch (handlerType) {\n          case ControlHandlerType.ROTATE:\n            this._rotate(delta);\n            break;\n          case ControlHandlerType.PAN:\n            this._pan(delta, deltaTime);\n            break;\n          default:\n            break;\n        }\n      }\n    }\n    if (this.floorMock) {\n      const position = this._cameraTransform.position;\n      if (position.y !== this.floorY) {\n        this._cameraTransform.setPosition(position.x, this.floorY, position.z);\n      }\n    }\n  }\n\n  private _pan(moveDelta: Vector3, delta: number): void {\n    const actualMoveSpeed = (delta / 1000) * this.movementSpeed;\n    moveDelta.normalize().scale(actualMoveSpeed);\n    this._cameraTransform.translate(moveDelta, true);\n  }\n\n  private _rotate(moveDelta: Vector3): void {\n    if (moveDelta.x !== 0 || moveDelta.y !== 0) {\n      const canvas = this.engine.canvas;\n      const deltaAlpha = (-moveDelta.x * 180) / canvas.width;\n      const deltaPhi = (moveDelta.y * 180) / canvas.height;\n      this._spherical.theta += MathUtil.degreeToRadian(deltaAlpha);\n      this._spherical.phi += MathUtil.degreeToRadian(deltaPhi);\n      this._spherical.makeSafe();\n      this._atTheBack = this._spherical.setToVec3(this._tempVec);\n      Vector3.add(this._cameraTransform.position, this._tempVec, this._tempVec);\n      this._atTheBack\n        ? this._cameraTransform.lookAt(this._tempVec, this._bottomVec)\n        : this._cameraTransform.lookAt(this._tempVec, this._topVec);\n    }\n  }\n}\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { InputManager, Keys, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"../enums/ControlHandlerType\";\nimport { OrbitControl } from \"../OrbitControl\";\nimport { IControlInput } from \"./IControlInput\";\nimport { StaticInterfaceImplement } from \"./StaticInterfaceImplement\";\n\n@StaticInterfaceImplement<IControlInput>()\nexport class ControlKeyboard {\n  static onUpdateHandler(input: InputManager): ControlHandlerType {\n    if (\n      input.isKeyHeldDown(Keys.ArrowLeft) ||\n      input.isKeyHeldDown(Keys.ArrowRight) ||\n      input.isKeyHeldDown(Keys.ArrowUp) ||\n      input.isKeyHeldDown(Keys.ArrowDown)\n    ) {\n      return ControlHandlerType.PAN;\n    } else {\n      return ControlHandlerType.None;\n    }\n  }\n\n  static onUpdateDelta(control: OrbitControl, outDelta: Vector3): void {\n    const { keyPanSpeed, input } = control;\n    outDelta.x = outDelta.y = 0;\n    if (input.isKeyHeldDown(Keys.ArrowLeft)) {\n      outDelta.x += keyPanSpeed;\n    }\n    if (input.isKeyHeldDown(Keys.ArrowRight)) {\n      outDelta.x -= keyPanSpeed;\n    }\n    if (input.isKeyHeldDown(Keys.ArrowUp)) {\n      outDelta.y += keyPanSpeed;\n    }\n    if (input.isKeyHeldDown(Keys.ArrowDown)) {\n      outDelta.y -= keyPanSpeed;\n    }\n  }\n}\n","import { InputManager, PointerButton, Vector3, Vector2 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"../enums/ControlHandlerType\";\nimport { OrbitControl } from \"../OrbitControl\";\nimport { IControlInput } from \"./IControlInput\";\nimport { StaticInterfaceImplement } from \"./StaticInterfaceImplement\";\n\nenum DeltaType {\n  Moving,\n  Distance,\n  None\n}\n@StaticInterfaceImplement<IControlInput>()\nexport class ControlPointer {\n  private static _deltaType: DeltaType = DeltaType.None;\n  private static _handlerType: ControlHandlerType = ControlHandlerType.None;\n  private static _frameIndex: number = 0;\n  private static _lastUsefulFrameIndex: number = -1;\n  private static _distanceOfPointers: number = 0;\n  static onUpdateHandler(input: InputManager): ControlHandlerType {\n    ++this._frameIndex;\n    const { pointers } = input;\n    switch (pointers.length) {\n      case 1:\n        if (input.isPointerHeldDown(PointerButton.Secondary)) {\n          this._updateType(ControlHandlerType.PAN, DeltaType.Moving);\n        } else if (input.isPointerHeldDown(PointerButton.Auxiliary)) {\n          this._updateType(ControlHandlerType.ZOOM, DeltaType.Moving);\n        } else if (input.isPointerHeldDown(PointerButton.Primary)) {\n          this._updateType(ControlHandlerType.ROTATE, DeltaType.Moving);\n        } else {\n          // When `onPointerMove` happens on the same frame as `onPointerUp`\n          // Need to record the movement of this frame\n          const { deltaPosition } = input.pointers[0];\n          if (deltaPosition.x !== 0 && deltaPosition.y !== 0) {\n            if (input.isPointerUp(PointerButton.Secondary)) {\n              this._updateType(ControlHandlerType.PAN, DeltaType.Moving);\n            } else if (input.isPointerUp(PointerButton.Auxiliary)) {\n              this._updateType(ControlHandlerType.ZOOM, DeltaType.Moving);\n            } else if (input.isPointerUp(PointerButton.Primary)) {\n              this._updateType(ControlHandlerType.ROTATE, DeltaType.Moving);\n            } else {\n              this._updateType(ControlHandlerType.None, DeltaType.None);\n            }\n          } else {\n            this._updateType(ControlHandlerType.None, DeltaType.None);\n          }\n        }\n        break;\n      case 2:\n        this._updateType(ControlHandlerType.ZOOM, DeltaType.Distance);\n        break;\n      case 3:\n        this._updateType(ControlHandlerType.PAN, DeltaType.Moving);\n        break;\n      default:\n        this._updateType(ControlHandlerType.None, DeltaType.None);\n        break;\n    }\n    return this._handlerType;\n  }\n\n  static onUpdateDelta(control: OrbitControl, outDelta: Vector3): void {\n    const { _frameIndex: frameIndex } = this;\n    switch (this._deltaType) {\n      case DeltaType.Moving:\n        outDelta.x = 0;\n        outDelta.y = 0;\n        if (this._lastUsefulFrameIndex === frameIndex - 1) {\n          const { pointers } = control.input;\n          const length = pointers.length;\n          for (let i = length - 1; i >= 0; i--) {\n            const { deltaPosition } = pointers[i];\n            outDelta.x += deltaPosition.x;\n            outDelta.y += deltaPosition.y;\n          }\n          outDelta.x /= length;\n          outDelta.y /= length;\n        }\n        break;\n      case DeltaType.Distance:\n        const { pointers } = control.input;\n        const pointer1 = pointers[0];\n        const pointer2 = pointers[1];\n        const curDistance = Vector2.distance(pointer1.position, pointer2.position);\n        if (this._lastUsefulFrameIndex === frameIndex - 1) {\n          outDelta.set(0, this._distanceOfPointers - curDistance, 0);\n        } else {\n          outDelta.set(0, 0, 0);\n        }\n        this._distanceOfPointers = curDistance;\n        break;\n      default:\n        break;\n    }\n    this._lastUsefulFrameIndex = frameIndex;\n  }\n\n  private static _updateType(handlerType: ControlHandlerType, deltaType: DeltaType) {\n    if (this._handlerType !== handlerType || this._deltaType !== deltaType) {\n      this._handlerType = handlerType;\n      this._deltaType = deltaType;\n      this._lastUsefulFrameIndex = -1;\n    }\n  }\n}\n","import { InputManager, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"../enums/ControlHandlerType\";\nimport { OrbitControl } from \"../OrbitControl\";\nimport { IControlInput } from \"./IControlInput\";\nimport { StaticInterfaceImplement } from \"./StaticInterfaceImplement\";\n\n@StaticInterfaceImplement<IControlInput>()\nexport class ControlWheel {\n  static onUpdateHandler(input: InputManager): ControlHandlerType {\n    const { wheelDelta } = input;\n    if (wheelDelta.x === 0 && wheelDelta.y === 0 && wheelDelta.z === 0) {\n      return ControlHandlerType.None;\n    } else {\n      return ControlHandlerType.ZOOM;\n    }\n  }\n\n  static onUpdateDelta(control: OrbitControl, outDelta: Vector3): void {\n    outDelta.copyFrom(control.input.wheelDelta);\n  }\n}\n","import { Camera, Canvas, InputManager, Script, Transform, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"./enums/ControlHandlerType\";\nimport { IControlInput } from \"./inputDevice/IControlInput\";\nimport { ControlKeyboard } from \"./inputDevice/ControlKeyboard\";\nimport { ControlPointer } from \"./inputDevice/ControlPointer\";\nimport { ControlWheel } from \"./inputDevice/ControlWheel\";\nimport { Spherical } from \"./Spherical\";\n\n/**\n * The camera's track controller, can rotate, zoom, pan, support mouse and touch events.\n */\nexport class OrbitControl extends Script {\n  canvas: Canvas;\n  input: InputManager;\n  inputDevices: IControlInput[] = [ControlKeyboard, ControlPointer, ControlWheel];\n  camera: Camera;\n  cameraTransform: Transform;\n\n  /** Whether to automatically rotate the camera, the default is false. */\n  autoRotate: boolean = false;\n  /** The radian of automatic rotation per second. */\n  autoRotateSpeed: number = Math.PI;\n  /** Whether to enable camera damping, the default is true. */\n  enableDamping: boolean = true;\n  /** Rotation speed, default is 1.0 . */\n  rotateSpeed: number = 1.0;\n  /** Camera zoom speed, the default is 1.0. */\n  zoomSpeed: number = 1.0;\n  /** Keyboard translation speed, the default is 7.0 . */\n  keyPanSpeed: number = 7.0;\n  /** Rotation damping parameter, default is 0.1 . */\n  dampingFactor: number = 0.1;\n  /** Zoom damping parameter, default is 0.2 . */\n  zoomFactor: number = 0.2;\n  /**  The minimum distance, the default is 0.1, should be greater than 0. */\n  minDistance: number = 0.1;\n  /** The maximum distance, the default is infinite, should be greater than the minimum distance. */\n  maxDistance: number = Infinity;\n  /** Minimum zoom speed, the default is 0.0. */\n  minZoom: number = 0.0;\n  /** Maximum zoom speed, the default is positive infinity. */\n  maxZoom: number = Infinity;\n  /** The minimum radian in the vertical direction, the default is 1 degree. */\n  minPolarAngle: number = 1;\n  /** The maximum radian in the vertical direction,  the default is 179 degree.  */\n  maxPolarAngle: number = (179 / 180) * Math.PI;\n  /** The minimum radian in the horizontal direction, the default is negative infinity. */\n  minAzimuthAngle: number = -Infinity;\n  /** The maximum radian in the horizontal direction, the default is positive infinity.  */\n  maxAzimuthAngle: number = Infinity;\n\n  private _enableKeys: boolean = true;\n  private _up: Vector3 = new Vector3(0, 1, 0);\n  private _target: Vector3 = new Vector3();\n  private _atTheBack: boolean = false;\n  private _spherical: Spherical = new Spherical();\n  private _sphericalDelta: Spherical = new Spherical();\n  private _sphericalDump: Spherical = new Spherical();\n  private _zoomFrag: number = 0;\n  private _scale: number = 1;\n  private _panOffset: Vector3 = new Vector3();\n  private _tempVec3: Vector3 = new Vector3();\n  private _enableHandler: number = ControlHandlerType.All;\n\n  /**\n   * Return whether to enable keyboard.\n   */\n  get enableKeys(): boolean {\n    return this._enableKeys;\n  }\n\n  set enableKeys(value: boolean) {\n    if (this._enableKeys !== value) {\n      this._enableKeys = value;\n      const { inputDevices } = this;\n      if (value) {\n        inputDevices.push(ControlKeyboard);\n      } else {\n        for (let i = inputDevices.length - 1; i >= 0; i--) {\n          if (inputDevices[i] === ControlKeyboard) {\n            inputDevices.splice(i, 1);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  /*\n   * Return up vector.\n   */\n  get up(): Vector3 {\n    return this._up;\n  }\n\n  set up(value: Vector3) {\n    this._up.copyFrom(value);\n    this._spherical.setYAxis(value);\n    this._atTheBack = false;\n  }\n\n  /**\n   * Return target position.\n   * */\n  get target(): Vector3 {\n    return this._target;\n  }\n\n  set target(value: Vector3) {\n    this._target.copyFrom(value);\n    this._atTheBack = false;\n  }\n\n  /**\n   *  Return Whether to enable rotation, the default is true.\n   */\n  get enableRotate(): boolean {\n    return (this._enableHandler & ControlHandlerType.ROTATE) !== 0;\n  }\n\n  set enableRotate(value: boolean) {\n    if (value) {\n      this._enableHandler |= ControlHandlerType.ROTATE;\n    } else {\n      this._enableHandler &= ~ControlHandlerType.ROTATE;\n    }\n  }\n\n  /**\n   *  Whether to enable camera damping, the default is true.\n   */\n  get enableZoom(): boolean {\n    return (this._enableHandler & ControlHandlerType.ZOOM) !== 0;\n  }\n\n  set enableZoom(value: boolean) {\n    if (value) {\n      this._enableHandler |= ControlHandlerType.ZOOM;\n    } else {\n      this._enableHandler &= ~ControlHandlerType.ZOOM;\n    }\n  }\n\n  /**\n   *  Whether to enable translation, the default is true.\n   */\n  get enablePan(): boolean {\n    return (this._enableHandler & ControlHandlerType.PAN) !== 0;\n  }\n\n  set enablePan(value: boolean) {\n    if (value) {\n      this._enableHandler |= ControlHandlerType.PAN;\n    } else {\n      this._enableHandler &= ~ControlHandlerType.PAN;\n    }\n  }\n\n  override onAwake(): void {\n    const { engine, entity } = this;\n    this.canvas = engine.canvas;\n    this.input = engine.inputManager;\n    this.camera = entity.getComponent(Camera);\n    this.cameraTransform = entity.transform;\n    this._spherical.setYAxis(this._up);\n    this._atTheBack = false;\n  }\n\n  override onUpdate(deltaTime: number): void {\n    /** Update this._sphericalDelta, this._scale and this._panOffset. */\n    this._updateInputDelta(deltaTime);\n    /** Update camera's transform. */\n    this._updateTransform();\n  }\n\n  private _updateInputDelta(deltaTime: number): void {\n    let curHandlerType = ControlHandlerType.None;\n    const { _tempVec3: delta, _enableHandler: enableHandler } = this;\n    const { inputDevices, input } = this;\n    for (let i = inputDevices.length - 1; i >= 0; i--) {\n      const handler = inputDevices[i];\n      const handlerType = handler.onUpdateHandler(input);\n      if (handlerType & enableHandler) {\n        curHandlerType |= handlerType;\n        handler.onUpdateDelta(this, delta);\n        switch (handlerType) {\n          case ControlHandlerType.ROTATE:\n            this._rotate(delta);\n            break;\n          case ControlHandlerType.ZOOM:\n            this._zoom(delta);\n            break;\n          case ControlHandlerType.PAN:\n            this._pan(delta);\n            break;\n          default:\n            break;\n        }\n      }\n    }\n    const { _sphericalDump, _sphericalDelta } = this;\n    if (this.enableDamping) {\n      if (enableHandler & ControlHandlerType.ZOOM && curHandlerType ^ ControlHandlerType.ZOOM) {\n        this._zoomFrag *= 1 - this.zoomFactor;\n      }\n      if (enableHandler & ControlHandlerType.ROTATE && curHandlerType ^ ControlHandlerType.ROTATE) {\n        _sphericalDelta.theta = _sphericalDump.theta *= 1 - this.dampingFactor;\n        _sphericalDelta.phi = _sphericalDump.phi *= 1 - this.dampingFactor;\n      }\n    }\n    if (curHandlerType === ControlHandlerType.None && this.autoRotate) {\n      const rotateAngle = (this.autoRotateSpeed / 1000) * deltaTime;\n      _sphericalDelta.theta -= rotateAngle;\n    }\n  }\n\n  private _rotate(delta: Vector3): void {\n    const radianLeft = ((2 * Math.PI * delta.x) / this.canvas.width) * this.rotateSpeed;\n    this._sphericalDelta.theta -= radianLeft;\n    const radianUp = ((2 * Math.PI * delta.y) / this.canvas.height) * this.rotateSpeed;\n    this._sphericalDelta.phi -= radianUp;\n    if (this.enableDamping) {\n      this._sphericalDump.theta = -radianLeft;\n      this._sphericalDump.phi = -radianUp;\n    }\n  }\n\n  private _zoom(delta: Vector3): void {\n    if (delta.y > 0) {\n      this._scale /= Math.pow(0.95, this.zoomSpeed);\n    } else if (delta.y < 0) {\n      this._scale *= Math.pow(0.95, this.zoomSpeed);\n    }\n  }\n\n  private _pan(delta: Vector3): void {\n    const { cameraTransform } = this;\n    const { elements } = cameraTransform.worldMatrix;\n    const { height } = this.canvas;\n    const targetDistance =\n      Vector3.distance(cameraTransform.position, this.target) * (this.camera.fieldOfView / 2) * (Math.PI / 180);\n    const distanceLeft = -2 * delta.x * (targetDistance / height);\n    const distanceUp = 2 * delta.y * (targetDistance / height);\n    this._panOffset.x += elements[0] * distanceLeft + elements[4] * distanceUp;\n    this._panOffset.y += elements[1] * distanceLeft + elements[5] * distanceUp;\n    this._panOffset.z += elements[2] * distanceLeft + elements[6] * distanceUp;\n  }\n\n  private _updateTransform(): void {\n    const { cameraTransform, target, _tempVec3, _spherical, _sphericalDelta, _panOffset } = this;\n    _tempVec3.copyFrom(cameraTransform.worldUp);\n    this._atTheBack = _tempVec3.y <= 0;\n    Vector3.subtract(cameraTransform.position, target, _tempVec3);\n    _spherical.setFromVec3(_tempVec3, this._atTheBack);\n    _spherical.theta += _sphericalDelta.theta;\n    _spherical.phi += _sphericalDelta.phi;\n    _spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, _spherical.theta));\n    _spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, _spherical.phi));\n    _spherical.makeSafe();\n    if (this._scale !== 1) {\n      this._zoomFrag = _spherical.radius * (this._scale - 1);\n    }\n    _spherical.radius += this._zoomFrag;\n    _spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, _spherical.radius));\n    this._atTheBack = _spherical.setToVec3(_tempVec3);\n    Vector3.add(target.add(_panOffset), _tempVec3, cameraTransform.worldPosition);\n    cameraTransform.lookAt(target, _tempVec3.copyFrom(this.up).scale(this._atTheBack ? -1 : 1));\n    /** Reset cache value. */\n    this._zoomFrag = 0;\n    this._scale = 1;\n    _sphericalDelta.set(0, 0, 0);\n    _panOffset.set(0, 0, 0);\n  }\n}\n","import { Camera, Canvas, Entity, InputManager, Script, Transform, Vector3 } from \"@galacean/engine\";\nimport { ControlHandlerType } from \"./enums/ControlHandlerType\";\nimport { IControlInput } from \"./inputDevice/IControlInput\";\nimport { ControlKeyboard } from \"./inputDevice/ControlKeyboard\";\nimport { ControlPointer } from \"./inputDevice/ControlPointer\";\nimport { ControlWheel } from \"./inputDevice/ControlWheel\";\n\n/**\n * The camera's track controller, can rotate, zoom, pan, support mouse and touch events.\n */\nexport class OrthoControl extends Script {\n  canvas: Canvas;\n  input: InputManager;\n  inputDevices: IControlInput[] = [ControlKeyboard, ControlPointer, ControlWheel];\n  camera: Camera;\n  cameraTransform: Transform;\n\n  /** Target position. */\n  target: Vector3 = new Vector3();\n  /** Up vector */\n  up: Vector3 = new Vector3(0, 1, 0);\n  /** Whether to automatically rotate the camera, the default is false. */\n  autoRotate: boolean = false;\n  /** The radian of automatic rotation per second. */\n  autoRotateSpeed: number = Math.PI;\n  /** Whether to enable keyboard. */\n  enableKeys: boolean = false;\n  /** Whether to enable camera damping, the default is true. */\n  enableDamping: boolean = true;\n  /** Rotation speed, default is 1.0 . */\n  rotateSpeed: number = 1.0;\n  /** Camera zoom speed, the default is 1.0. */\n  zoomSpeed: number = 1.0;\n  /** Keyboard translation speed, the default is 7.0 . */\n  keyPanSpeed: number = 7.0;\n  /** Rotation damping parameter, default is 0.1 . */\n  dampingFactor: number = 0.1;\n  /** Zoom damping parameter, default is 0.2 . */\n  zoomFactor: number = 0.2;\n  /**  The minimum distance, the default is 0.1, should be greater than 0. */\n  minDistance: number = 0.1;\n  /** The maximum distance, the default is infinite, should be greater than the minimum distance. */\n  maxDistance: number = Infinity;\n  /** Minimum zoom speed, the default is 0.0. */\n  minZoom: number = 0.0;\n  /** Maximum zoom speed, the default is positive infinity. */\n  maxZoom: number = Infinity;\n  /** The minimum radian in the vertical direction, the default is 0 radian, the value range is 0 - Math.PI. */\n  minPolarAngle: number = 0.0;\n  /** The maximum radian in the vertical direction, the default is Math.PI, and the value range is 0 - Math.PI. */\n  maxPolarAngle: number = Math.PI;\n  /** The minimum radian in the horizontal direction, the default is negative infinity. */\n  minAzimuthAngle: number = -Infinity;\n  /** The maximum radian in the horizontal direction, the default is positive infinity.  */\n  maxAzimuthAngle: number = Infinity;\n\n  private _zoomScaleUnit: number = 2;\n  private _scale: number = 1;\n  private _panOffset: Vector3 = new Vector3();\n  private _tempVec3: Vector3 = new Vector3();\n  private _enableHandler: number = ControlHandlerType.All;\n\n  /**\n   *  Return Whether to enable rotation, the default is true.\n   */\n  get enableRotate(): boolean {\n    return (this._enableHandler & ControlHandlerType.ROTATE) !== 0;\n  }\n\n  set enableRotate(value: boolean) {\n    if (value) {\n      this._enableHandler |= ControlHandlerType.ROTATE;\n    } else {\n      this._enableHandler &= ~ControlHandlerType.ROTATE;\n    }\n  }\n\n  /**\n   *  Whether to enable camera damping, the default is true.\n   */\n  get enableZoom(): boolean {\n    return (this._enableHandler & ControlHandlerType.ZOOM) !== 0;\n  }\n\n  set enableZoom(value: boolean) {\n    if (value) {\n      this._enableHandler |= ControlHandlerType.ZOOM;\n    } else {\n      this._enableHandler &= ~ControlHandlerType.ZOOM;\n    }\n  }\n\n  /**\n   *  Whether to enable translation, the default is true.\n   */\n  get enablePan(): boolean {\n    return (this._enableHandler & ControlHandlerType.PAN) !== 0;\n  }\n\n  set enablePan(value: boolean) {\n    if (value) {\n      this._enableHandler |= ControlHandlerType.PAN;\n    } else {\n      this._enableHandler &= ~ControlHandlerType.PAN;\n    }\n  }\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.enableRotate = false;\n  }\n\n  override onAwake(): void {\n    const { engine, entity } = this;\n    this.canvas = engine.canvas;\n    this.input = engine.inputManager;\n    this.camera = entity.getComponent(Camera);\n    this.cameraTransform = entity.transform;\n  }\n\n  override onUpdate(deltaTime: number): void {\n    /** Update this._sphericalDelta, this._scale and this._panOffset. */\n    this._updateInputDelta(deltaTime);\n    /** Update camera's transform. */\n    this._updateCamera();\n  }\n\n  private _updateInputDelta(deltaTime: number): void {\n    let curHandlerType = ControlHandlerType.None;\n    const { _tempVec3: delta, _enableHandler: enableHandler } = this;\n    const { inputDevices, input } = this;\n    for (let i = inputDevices.length - 1; i >= 0; i--) {\n      const handler = inputDevices[i];\n      const handlerType = handler.onUpdateHandler(input);\n      if (handlerType & enableHandler) {\n        curHandlerType |= handlerType;\n        handler.onUpdateDelta(this, delta);\n        switch (handlerType) {\n          case ControlHandlerType.ZOOM:\n            this._zoom(delta);\n            break;\n          case ControlHandlerType.PAN:\n            this._pan(delta);\n            break;\n          default:\n            break;\n        }\n      }\n    }\n  }\n\n  private _zoom(delta: Vector3): void {\n    if (delta.y > 0) {\n      this._scale /= Math.pow(0.95, this.zoomSpeed);\n    } else if (delta.y < 0) {\n      this._scale *= Math.pow(0.95, this.zoomSpeed);\n    }\n  }\n\n  private _pan(delta: Vector3): void {\n    this._panOffset.copyFrom(delta);\n  }\n\n  private _updateCamera(): void {\n    const { cameraTransform, camera, _panOffset } = this;\n\n    // Update Zoom\n    const sizeDiff = this._zoomScaleUnit * Math.log1p(camera.orthographicSize) * (this._scale - 1);\n    const size = camera.orthographicSize + sizeDiff;\n    camera.orthographicSize = Math.max(this.minZoom, Math.min(this.maxZoom, size));\n\n    // Update X and Y\n    const { width, height } = this.canvas;\n    const { x, y } = _panOffset;\n    const doubleOrthographicSize = camera.orthographicSize * 2;\n    const width3D = doubleOrthographicSize * camera.aspectRatio;\n    const height3D = doubleOrthographicSize;\n    const cameraPosition = cameraTransform.position;\n    const curPosition = this._tempVec3;\n    curPosition.x = cameraPosition.x - (x * width3D) / width;\n    curPosition.y = cameraPosition.y + (y * height3D) / height;\n    curPosition.z = cameraPosition.z;\n\n    // Update camera transform\n    cameraTransform.position = curPosition;\n    /** Reset cache value. */\n    this._scale = 1;\n    _panOffset.set(0, 0, 0);\n  }\n}\n"],"names":["ControlHandlerType","None","ROTATE","ZOOM","PAN","All","StaticInterfaceImplement","constructor","ControlFreeKeyboard","onUpdateHandler","input","isKeyHeldDown","Keys","ArrowLeft","KeyA","ArrowUp","KeyW","ArrowDown","KeyS","ArrowRight","KeyD","onUpdateDelta","control","outDelta","movementSpeed","x","y","z","DeltaType","Moving","Distance","ControlFreePointer","_frameIndex","pointers","length","isPointerHeldDown","PointerButton","Primary","_updateType","deltaPosition","isPointerUp","_handlerType","frameIndex","_deltaType","_lastUsefulFrameIndex","handlerType","deltaType","ESP","MathUtil","zeroTolerance","Spherical","radius","phi","theta","_matrix","Matrix","_matrixInv","undefined","makeSafe","count","Math","floor","PI","clamp","set","setYAxis","up","xAxis","_xAxis","_yAxis","yAxis","_zAxis","zAxis","Vector3","equals","copyFrom","normalize","cross","es","elements","eInv","setFromVec3","value","atTheBack","transformNormal","acos","atan2","setToVec3","sinPhiRadius","sin","cos","FreeControl","entity","inputDevices","rotateSpeed","floorMock","floorY","_spherical","_tempVec","_atTheBack","_topVec","_bottomVec","engine","inputManager","transform","_cameraTransform","tempVec","transformByQuat","rotationQuaternion","spherical","onUpdate","deltaTime","enabled","delta","i","handler","_rotate","_pan","position","setPosition","moveDelta","actualMoveSpeed","scale","translate","canvas","deltaAlpha","width","deltaPhi","height","degreeToRadian","add","lookAt","Script","ControlKeyboard","keyPanSpeed","ControlPointer","Secondary","Auxiliary","pointer1","pointer2","curDistance","Vector2","distance","_distanceOfPointers","ControlWheel","wheelDelta","OrbitControl","autoRotate","autoRotateSpeed","enableDamping","zoomSpeed","dampingFactor","zoomFactor","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","_enableKeys","_up","_target","_sphericalDelta","_sphericalDump","_zoomFrag","_scale","_panOffset","_tempVec3","_enableHandler","onAwake","camera","getComponent","Camera","cameraTransform","_updateInputDelta","_updateTransform","curHandlerType","enableHandler","_zoom","rotateAngle","radianLeft","radianUp","pow","worldMatrix","targetDistance","target","fieldOfView","distanceLeft","distanceUp","worldUp","subtract","max","min","worldPosition","enableKeys","push","splice","enableRotate","enableZoom","enablePan","OrthoControl","_zoomScaleUnit","_updateCamera","sizeDiff","log1p","orthographicSize","size","doubleOrthographicSize","width3D","aspectRatio","height3D","cameraPosition","curPosition"],"mappings":"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","x_google_ignoreList":[0,1,2,4,10]}