import { PhysicsMaterial } from "../PhysicsMaterial";
import { Vector3 } from "@galacean/engine-math";
import { Collider } from "../Collider";
/**
 * Abstract class for collider shapes.
 */
export declare abstract class ColliderShape {
    private static _idGenerator;
    protected _id: number;
    protected _material: PhysicsMaterial;
    private _isTrigger;
    private _rotation;
    private _position;
    private _contactOffset;
    /**
     * Collider owner of this shape.
     */
    get collider(): Collider;
    /**
     * Unique id for this shape.
     */
    get id(): number;
    /**
     * Contact offset for this shape.
     */
    get contactOffset(): number;
    set contactOffset(value: number);
    /**
     * Physical material.
     */
    get material(): PhysicsMaterial;
    set material(value: PhysicsMaterial);
    /**
     * The local rotation of this ColliderShape.
     */
    get rotation(): Vector3;
    set rotation(value: Vector3);
    /**
     * The local position of this ColliderShape.
     */
    get position(): Vector3;
    set position(value: Vector3);
    /**
     * True for TriggerShape, false for SimulationShape.
     */
    get isTrigger(): boolean;
    set isTrigger(value: boolean);
    protected constructor();
    private _setPosition;
    private _setRotation;
}
