import { Joint } from "./Joint";
import { Vector3 } from "@galacean/engine-math";
import { JointMotor } from "./JointMotor";
import { JointLimits } from "./JointLimits";
/**
 * A joint which behaves in a similar way to a hinge or axle.
 */
export declare class HingeJoint extends Joint {
    private _axis;
    private _hingeFlags;
    private _useSpring;
    private _jointMonitor;
    private _limits;
    /**
     * The anchor rotation.
     */
    get axis(): Vector3;
    set axis(value: Vector3);
    /**
     * The swing offset.
     */
    get swingOffset(): Vector3;
    set swingOffset(value: Vector3);
    /**
     * The current angle in degrees of the joint relative to its rest position.
     */
    get angle(): number;
    /**
     * The angular velocity of the joint in degrees per second.
     */
    get velocity(): Readonly<Vector3>;
    /**
     * Enables the joint's limits. Disabled by default.
     */
    get useLimits(): boolean;
    set useLimits(value: boolean);
    /**
     * Enables the joint's motor. Disabled by default.
     */
    get useMotor(): boolean;
    set useMotor(value: boolean);
    /**
     * Enables the joint's spring. Disabled by default.
     */
    get useSpring(): boolean;
    set useSpring(value: boolean);
    /**
     * The motor will apply a force up to a maximum force to achieve the target velocity in degrees per second.
     */
    get motor(): JointMotor;
    set motor(value: JointMotor);
    /**
     * Limit of angular rotation (in degrees) on the hinge joint.
     */
    get limits(): JointLimits;
    set limits(value: JointLimits);
}
