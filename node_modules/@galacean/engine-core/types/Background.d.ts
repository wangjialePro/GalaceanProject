import { Color } from "@galacean/engine-math";
import { Engine } from "./Engine";
import { BackgroundMode } from "./enums/BackgroundMode";
import { BackgroundTextureFillMode } from "./enums/BackgroundTextureFillMode";
import { Sky } from "./sky/Sky";
import { Texture2D } from "./texture";
/**
 * Background of scene.
 */
export declare class Background {
    private _engine;
    /**
     * Background mode.
     * @defaultValue `BackgroundMode.SolidColor`
     * @remarks If using `BackgroundMode.Sky` mode and material or mesh of the `sky` is not defined, it will downgrade to `BackgroundMode.SolidColor`.
     */
    mode: BackgroundMode;
    /**
     * Background solid color.
     * @defaultValue `new Color(0.25, 0.25, 0.25, 1.0)`
     * @remarks When `mode` is `BackgroundMode.SolidColor`, the property will take effects.
     */
    solidColor: Color;
    /**
     * Background sky.
     * @remarks When `mode` is `BackgroundMode.Sky`, the property will take effects.
     */
    readonly sky: Sky;
    private _texture;
    /**
     * Background texture.
     * @remarks When `mode` is `BackgroundMode.Texture`, the property will take effects.
     */
    get texture(): Texture2D;
    set texture(value: Texture2D);
    set textureFillMode(value: BackgroundTextureFillMode);
    /**
     * Constructor of Background.
     * @param _engine Engine Which the background belongs to.
     */
    constructor(_engine: Engine);
    private _createPlane;
}
