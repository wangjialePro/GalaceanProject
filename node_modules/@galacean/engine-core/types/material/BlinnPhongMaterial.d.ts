import { Color, Vector4 } from "@galacean/engine-math";
import { Engine } from "../Engine";
import { Texture2D } from "../texture/Texture2D";
import { BaseMaterial } from "./BaseMaterial";
/**
 * Blinn-phong Material.
 */
export declare class BlinnPhongMaterial extends BaseMaterial {
    private static _specularColorProp;
    private static _shininessProp;
    private static _specularTextureProp;
    /**
     * Base color.
     */
    get baseColor(): Color;
    set baseColor(value: Color);
    /**
     * Base texture.
     */
    get baseTexture(): Texture2D;
    set baseTexture(value: Texture2D);
    /**
     * Specular color.
     */
    get specularColor(): Color;
    set specularColor(value: Color);
    /**
     * Specular texture.
     */
    get specularTexture(): Texture2D;
    set specularTexture(value: Texture2D);
    /**
     * Emissive color.
     */
    get emissiveColor(): Color;
    set emissiveColor(value: Color);
    /**
     * Emissive texture.
     */
    get emissiveTexture(): Texture2D;
    set emissiveTexture(value: Texture2D);
    /**
     * Normal texture.
     */
    get normalTexture(): Texture2D;
    set normalTexture(value: Texture2D);
    /**
     * Normal texture intensity.
     */
    get normalIntensity(): number;
    set normalIntensity(value: number);
    /**
     * Set the specular reflection coefficient, the larger the value, the more convergent the specular reflection effect.
     */
    get shininess(): number;
    set shininess(value: number);
    /**
     * Tiling and offset of main textures.
     */
    get tilingOffset(): Vector4;
    set tilingOffset(value: Vector4);
    /**
     * Create a BlinnPhong material instance.
     * @param engine - Engine to which the material belongs
     */
    constructor(engine: Engine);
    /**
     * @override
     */
    clone(): BlinnPhongMaterial;
}
