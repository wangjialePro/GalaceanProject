import { IClone } from "@galacean/engine-design";
import { RefObject } from "../asset/RefObject";
import { Engine } from "../Engine";
import { Shader } from "../shader/Shader";
import { ShaderData } from "../shader/ShaderData";
import { RenderState } from "../shader/state/RenderState";
/**
 * Material.
 */
export declare class Material extends RefObject implements IClone {
    /** Name. */
    name: string;
    /** Shader data. */
    readonly shaderData: ShaderData;
    /**
     * Shader used by the material.
     */
    get shader(): Shader;
    set shader(value: Shader);
    /**
     * First Render state.
     */
    get renderState(): RenderState;
    /**
     * Render states.
     */
    get renderStates(): Readonly<RenderState[]>;
    /**
     * Create a material instance.
     * @param engine - Engine to which the material belongs
     * @param shader - Shader used by the material
     */
    constructor(engine: Engine, shader: Shader);
    /**
     * Clone and return the instance.
     */
    clone(): Material;
    /**
     * Clone to the target material.
     * @param target - target material
     */
    cloneTo(target: Material): void;
    /**
     * @override
     */
    _addRefCount(value: number): void;
    /**
     * @override
     */
    protected _onDestroy(): void;
}
