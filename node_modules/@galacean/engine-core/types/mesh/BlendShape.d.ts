import { Vector3 } from "@galacean/engine-math";
import { BlendShapeFrame } from "./BlendShapeFrame";
/**
 * BlendShape.
 */
export declare class BlendShape {
    /** Name of BlendShape. */
    name: string;
    private _dataChangeManager;
    private _frames;
    /**
     * Frames of BlendShape.
     */
    get frames(): Readonly<BlendShapeFrame[]>;
    /**
     * Create a BlendShape.
     * @param name - BlendShape name.
     */
    constructor(name: string);
    /**
     * Add a BlendShapeFrame by weight, deltaPositions, deltaNormals and deltaTangents.
     * @param weight - Weight of BlendShapeFrame
     * @param deltaPositions - Delta positions for the frame being added
     * @param deltaNormals - Delta normals for the frame being added
     * @param deltaTangents - Delta tangents for the frame being added
     */
    addFrame(weight: number, deltaPositions: Vector3[], deltaNormals?: Vector3[], deltaTangents?: Vector3[]): BlendShapeFrame;
    /**
     * Add a BlendShapeFrame.
     * @param frame - The BlendShapeFrame.
     */
    addFrame(frame: BlendShapeFrame): void;
    /**
     * Clear all frames.
     */
    clearFrames(): void;
    private _addFrame;
    private _updateUseNormalAndTangent;
}
