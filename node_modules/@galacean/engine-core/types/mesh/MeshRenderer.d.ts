import { BoundingBox } from "@galacean/engine-math";
import { RenderContext } from "../RenderPipeline/RenderContext";
import { Renderer } from "../Renderer";
import { ICustomClone } from "../clone/ComponentCloner";
import { Mesh } from "../graphic/Mesh";
/**
 * MeshRenderer Component.
 */
export declare class MeshRenderer extends Renderer implements ICustomClone {
    private static _uvMacro;
    private static _uv1Macro;
    private static _normalMacro;
    private static _tangentMacro;
    private static _vertexColorMacro;
    private _enableVertexColor;
    /**
     * Mesh assigned to the renderer.
     */
    get mesh(): Mesh;
    set mesh(value: Mesh);
    /**
     * Whether enable vertex color.
     */
    get enableVertexColor(): boolean;
    set enableVertexColor(value: boolean);
    /**
     * @override
     */
    protected _updateBounds(worldBounds: BoundingBox): void;
    /**
     * @override
     */
    protected _render(context: RenderContext): void;
    private _setMesh;
    private _onMeshChanged;
}
