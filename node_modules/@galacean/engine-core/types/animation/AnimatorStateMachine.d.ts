import { AnimatorState } from "./AnimatorState";
export interface AnimatorStateMap {
    [key: string]: AnimatorState;
}
/**
 * A graph controlling the interaction of states. Each state references a motion.
 */
export declare class AnimatorStateMachine {
    /** The list of states. */
    readonly states: AnimatorState[];
    /**
     * The state will be played automatically.
     * @remarks When the Animator's AnimatorController changed or the Animator's onEnable be triggered.
     */
    defaultState: AnimatorState;
    /**
     * Add a state to the state machine.
     * @param name - The name of the new state
     */
    addState(name: string): AnimatorState;
    /**
     * Remove a state from the state machine.
     * @param state - The state
     */
    removeState(state: AnimatorState): void;
    /**
     * Get the state by name.
     * @param name - The layer's name
     */
    findStateByName(name: string): AnimatorState;
    /**
     * Makes a unique state name in the state machine.
     * @param name - Desired name for the state.
     * @returns Unique name.
     */
    makeUniqueStateName(name: string): string;
}
