import { BoundingBox } from "@galacean/engine-math";
import { ICustomClone } from "../../clone/ComponentCloner";
import { Renderer } from "../../Renderer";
import { RenderContext } from "../../RenderPipeline/RenderContext";
import { Sprite } from "./Sprite";
/**
 * A component for masking Sprites.
 */
export declare class SpriteMask extends Renderer implements ICustomClone {
    /** The mask layers the sprite mask influence to. */
    influenceLayers: number;
    private _sprite;
    private _automaticWidth;
    private _automaticHeight;
    private _customWidth;
    private _customHeight;
    private _flipX;
    private _flipY;
    private _alphaCutoff;
    /**
     * Render width (in world coordinates).
     *
     * @remarks
     * If width is set, return the set value,
     * otherwise return `SpriteMask.sprite.width`.
     */
    get width(): number;
    set width(value: number);
    /**
     * Render height (in world coordinates).
     *
     * @remarks
     * If height is set, return the set value,
     * otherwise return `SpriteMask.sprite.height`.
     */
    get height(): number;
    set height(value: number);
    /**
     * Flips the sprite on the X axis.
     */
    get flipX(): boolean;
    set flipX(value: boolean);
    /**
     * Flips the sprite on the Y axis.
     */
    get flipY(): boolean;
    set flipY(value: boolean);
    /**
     * The Sprite to render.
     */
    get sprite(): Sprite;
    set sprite(value: Sprite | null);
    /**
     * The minimum alpha value used by the mask to select the area of influence defined over the mask's sprite. Value between 0 and 1.
     */
    get alphaCutoff(): number;
    set alphaCutoff(value: number);
    /**
     * @override
     * @inheritdoc
     */
    _onDestroy(): void;
    /**
     * @override
     */
    protected _updateBounds(worldBounds: BoundingBox): void;
    /**
     * @override
     * @inheritdoc
     */
    protected _render(context: RenderContext): void;
    private _calDefaultSize;
    private _onSpriteChange;
}
