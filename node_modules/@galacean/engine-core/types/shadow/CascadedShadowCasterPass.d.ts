import { Camera } from "../Camera";
/**
 * Cascade shadow caster.
 */
export declare class CascadedShadowCasterPass {
    private static _lightShadowBiasProperty;
    private static _lightDirectionProperty;
    private static _shadowMatricesProperty;
    private static _shadowMapSize;
    private static _shadowInfosProperty;
    private static _shadowMapsProperty;
    private static _shadowSplitSpheresProperty;
    private static _maxCascades;
    private static _cascadesSplitDistance;
    private static _viewport;
    private static _clearColor;
    private static _tempVector;
    private static _tempMatrix0;
    private readonly _camera;
    private readonly _engine;
    private readonly _shadowCasterShader;
    private readonly _supportDepthTexture;
    private _shadowMapResolution;
    private _shadowMapSize;
    private _shadowTileResolution;
    private _shadowBias;
    private _shadowMapFormat;
    private _shadowCascadeMode;
    private _shadowSliceData;
    private _lightUp;
    private _lightSide;
    private _existShadowMap;
    private _splitBoundSpheres;
    /** The end is project prcision problem in shader. */
    private _shadowMatrices;
    private _shadowInfos;
    private _depthTexture;
    private _renderTargets;
    private _viewportOffsets;
    constructor(camera: Camera);
    private _renderDirectShadowMap;
    private _updateReceiversShaderData;
    private _getCascadesSplitDistance;
    private _getFarWithRadius;
    private _getAvailableRenderTarget;
    private _updateShadowSettings;
    private _updateSingleShadowCasterShaderData;
}
